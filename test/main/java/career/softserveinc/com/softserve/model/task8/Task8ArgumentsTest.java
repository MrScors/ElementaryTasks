package main.java.career.softserveinc.com.softserve.model.task8;

import main.java.career.softserveinc.com.softserve.model.task6.Task6Arguments;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import static org.junit.jupiter.api.Assertions.*;

class Task8ArgumentsTest {

    private static final String PARAM_1 = "1000000000000000000 false";
    private static final String PARAM_2 = "2147483648 false";
    private static final String PARAM_3 = "214748364 true";
    private static final String PARAM_4 = "10 200000000000000000000000000000000000000000 true";
    private static final String

            "true";
    private static final String PARAM_6 = "-5 1 false";
    private static final String PARAM_7 = "-22 false";
    @ParameterizedTest
    @ValueSource(strings = {PARAM_1, PARAM_2, PARAM_3, PARAM_4, PARAM_5, PARAM_6, PARAM_7})
    void validateParametrizedTest(String string) {
        String[] splintedArgs = string.split(", ");
        String[] splintedActualArgs = new String[splintedArgs.length-1];
        System.arraycopy(splintedArgs, 0, splintedActualArgs, 0, splintedActualArgs.length);
        Task8Arguments args = new Task8Arguments(splintedActualArgs);
        boolean actual = args.validate();
        boolean expected = Boolean.parseBoolean(splintedArgs[splintedArgs.length-1]);
        assertEquals(expected, actual);
    }

}